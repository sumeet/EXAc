xa {
  next_link/x = 800
  loop {
    link next_link/x
    kill
    spawn {
      throwaway/t = #nerv
      $ch = hostid
      HALT
    }
    if (next_link/x == 800) {
      spawn { next_link/x = 1 }
            { next_link/x = 3 }
            { next_link/x = -3 }
      continue
    }
    if (next_link/x == 1) {
      spawn { next_link/x = 1 }
            { next_link/x = 3 }
            { next_link/x = -3 }
      continue
    }
    if (next_link/x == -1) {
      spawn { next_link/x = -1 }
            { next_link/x = 3 }
            { next_link/x = -3 }
      continue
    }
    if (next_link/x == -3) {
      spawn { next_link/x = -1 }
            { next_link/x = 1 }
            { next_link/x = -3 }
      continue
    }
    if (next_link/x == 3) {
      spawn { next_link/x = -1 }
            { next_link/x = 1 }
            { next_link/x = 3 }
      continue
    }
    HALT
  }
}

xb {
  fcreate() {
    num_iterations/x = 0
    while(num_iterations/x < 100) {
      if (chready) {
        fwrite($ch)
      }
      num_iterations/x += 1
    }

    // first do a bubble sort
    file.seek(-9999)
    while (!feof) {
      a/x = fread()
      if (feof) { continue }
      b/t = fread()
      if (a/x > b/t) {
        // swap
        file.seek(-1)
        b/x = fread()
        file.seek(-2)
        a/t = fread()
        fwrite(a/t)
        file.seek(-2)
        fwrite(b/x)
        file.seek(-9999)
      } else {
        file.seek(-1)
      }
    }

    // remove duplicates
    file.seek(-9999)
    while (!feof) {
      a/x = fread()
      if (feof) { continue }
      b/t = fread()
      if (a/x == b/t) {
        file.seek(-1)
        fvoid()
      }
      file.seek(-1)
    }

    // now read out all the host IDs in order locally
    file.seek(-9999)
    chtoggle()
    while(!feof) {
      $local = fread()
    }
    $local = -1
    file.wipe()
  }
}

xc {
  chtoggle()
  fcreate() {
    host_id/x = $local
    while (host_id/x != -1) {
      fwrite(host_id/x)
      chtoggle()
      spawn {
        #include "worker.exc"
      }

      %repeat(50) {
        $global = host_id/x
      }
      fwrite($global)

      chtoggle()
      host_id/x = $local
    }
  }
  HALT
}
